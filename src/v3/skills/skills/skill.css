@import url(../../../config/config.css);

.skill {
    display: flex;
    background-color: hsla(0, 0%, 0%, .1);
    overflow: hidden;
    border-radius: 20px;
    /* border: 1px black solid; */
    padding: 1vh;
    height: 100%;
    justify-content: start;
    align-items: center;
}


.skill_icon {
    position: relative;
    top: 20%;
    left: 80%;
    padding: 1vh;
    margin: 1vh;
    font-size: 8vh;
    color: hsla(0, 0%, 0%, 0);
    transition: color 2s ease;
    /* font-weight: 800; */

}

.skill_description {
    color: aliceblue;
    letter-spacing: .2vh;
    font-weight: bold;
    font-family: Arial, Helvetica, sans-serif;
    font-size: 2vh;
}

.skill_hovered {
    position: relative;
    top: 0;
    transform: translateY(-100%);
    border-top-left-radius: 20px;
    border-bottom-left-radius: 20px;
    height: 7vh;
    background-color: hsla(0, 0%, 0%, .1);
    width: 0vw;
    transition: width .5s ease, box-shadow .5s ease;
}

.skill_container:hover .skill_hovered {
    border-top-right-radius: 20px;
    border-bottom-right-radius: 20px;
    width: 25vw;
    box-shadow: 10px 10px 10px 10px hsla(0, 0%, 0%, .1);
}

.skill_container:hover .skill_icon {
    color: hsla(0, 0%, 100%, .5);
    background-color: hsla(0, 0%, 0%, .1);

}

.skill_container {
    width: 25vw;
    height: 5vh;
    /* transition-duration: 1s; */
}


/* .skill_container:hover .skill2 {
    transform:  rotateY(0deg);
} */

/* .skill_container:hover .skill1 {
    transform: rotateY(90deg) translateX(100%);
} */


/* .skill_container:hover .skill1 {
    animation: prevSkillOut ease 1s;
    animation-iteration-count: unset;
    animation-fill-mode: forwards;
}

.skill_container:hover .skill2 {
    animation: nextSkillIn ease 1s;
    animation-iteration-count: unset;
    animation-fill-mode: forwards;
} */

/* @keyframes nextSkill {
    0% {
        transform:  translateX(-50%) rotateY(90deg) translateX(-50%);
    }

    10% {
        transform:  translateX(-50%) rotateY(80deg) translateX(-50%);
    }

    100% {
        transform:  rotateY(0deg);
    }
} */

/* @keyframes nextSkillOut {
    0% {
        transform: rotateY(0deg);
    }

    20% {
        transform: translateX(5%) rotateY(30deg) translateX(5%);
    }

    100% {
        transform: translateX(-50%) rotateY(90deg) translateX(-50%);
    }
}

@keyframes nextSkillIn {
    0% {

        transform: translateX(-50%) rotateY(90deg) translateX(-50%);
    }

    20% {
        transform: translateX(5%) rotateY(30deg) translateX(5%);
    }

    100% {
        transform: rotateY(0deg);
    }
}

@keyframes prevSkillOut {
    0% {
        transform: rotateY(0deg);
    }

    20% {
        transform: translateX(-5%) rotateY(30deg) translateX(-5%);
    }

    100% {
        transform: translateX(50%) rotateY(90deg) translateX(50%);
    }
}

@keyframes prevSkillIn {
    0% {

        transform: translateX(50%) rotateY(90deg) translateX(50%);
    }

    20% {
        transform: translateX(-5%) rotateY(30deg) translateX(-5%);
    }

    100% {
        transform: rotateY(0deg);
    }
} */